{"version":3,"sources":["app.js","controllers/buildings.js","controllers/game.js","services/storage.js","values/buildings.js","values/const.js","values/game.js","values/resources.js"],"names":["angular","module","config","$routeProvider","when","templateUrl","otherwise","redirectTo","controller","Buildings","this","buildings","$interval","Const","Game","Resources","Storage","save","SAVE_RATE","TICK_RATE","service","console","log","version","resources","_","forEach","res","key","value","bld","unlocked","localStorage","setItem","SAVE_LOCATION","JSON","stringify","err","error","load","parse","getItem","collectFlowers","name","description","increase","current","max","level","requires","provides","flowers","rate","constant","limit"],"mappings":"AAAA,YAEAA,SAAQC,OAAO,4BACfD,QAAQC,OAAO,yBACfD,QAAQC,OAAO,uBAEfD,QACGC,OAAO,aACN,UACA,wBACA,qBACA,qBAEDC,QAAA,iBAAO,SAASC,GACfA,EACGC,KAAK,cAAgBC,YAAa,yBAClCC,WAAYC,WAAY;AChB/B,YAAAP,SACGC,OAAO,yBACPO,WAAW,aAAA,YAAa,SAASC,GAChCC,KAAKC,UAAYF;ACHrB,YAAAT,SACGC,OAAO,yBACPO,WAAW,QAAA,YAAA,QAAA,YAAA,OAAA,YAAA,UAAQ,SAASI,EAAWC,EAAOJ,EAAWK,EAAMC,EAAWC,GACzEJ,EAAUI,EAAQC,KAAMJ,EAAMK,WAE9BN,EAAU,aAEPC,EAAMM;ACPb,YAAAnB,SACGC,OAAO,sBACPmB,QAAQ,WAAA,YAAA,QAAA,YAAA,YAAW,SAASR,EAAWC,EAAOE,EAAWN,GACxDC,KAAKO,KAAO,WACVI,QAAQC,IAAI,cACZ,MACA,WAAE,GAAML,IACJM,QAAS,EACTC,aACAb,aAGFc,GAAEC,QAAQX,EAAW,SAASY,EAAKC,GACjCX,EAAKO,UAAUI,IACbC,MAAOF,EAAIE,SAIfJ,EAAEC,QAAQjB,EAAW,SAASqB,EAAKF,GACjCX,EAAKN,UAAUiB,IACbC,MAAOC,EAAID,MACXE,SAAUD,EAAIC,YAIlBC,aAAaC,QAAQpB,EAAMqB,cAAeC,KAAKC,UAAUnB,OACzD,MAAMoB,GACNhB,QAAQiB,MAAMD,KAIlB3B,KAAK6B,KAAO,WACVlB,QAAQC,IAAI,eACZ,KACE,GAAMiB,GAAOJ,KAAKK,MAAMR,aAAaS,QAAQ5B,EAAMqB,eAEnDT,GAAEC,QAAQa,EAAKf,UAAW,SAASG,EAAKC,GACtCb,EAAUa,GAAKC,MAAQF,EAAIE,QAG7BJ,EAAEC,QAAQa,EAAK5B,UAAW,SAASmB,EAAKF,GACtCnB,EAAUmB,GAAKC,MAAQC,EAAID,MAC3BpB,EAAUmB,GAAKG,SAAWD,EAAIC,WAEhC,MAAOM,GACPhB,QAAQiB,MAAMD;ACftB,YAAArC,SACGC,OAAO,oBACP4B,MAAM,aACLa,gBACEC,KAAM,kBACNC,YAAa,4DACbb,UAAU,EACVc,SAAU,EACVhB,OACEiB,QAAS,EACTC,IAAK,EACLC,MAAO,GAETC,YAEAC,UACE1B,WACE2B,SACEtB,MAAO,EACPuB,KAAM;ACjDlB,YAAApD,SACGC,OAAO,oBACPoD,SAAS,SACRlC,UAAW,IACXD,UAAW,IACXgB,cAAe;ACLnB,YAAAlC,SACGC,OAAO,oBACP4B,MAAM;ACWT,YAAA7B,SACGC,OAAO,oBACP4B,MAAM,aACLsB,SACER,KAAM,UACNC,YAAa,8CACbf,OACEiB,QAAS,EACTQ,MAAO,GAETF,KAAM","file":"munchkins.js","sourcesContent":["'use strict';\n\nangular.module('munchkins.controllers', []);\nangular.module('munchkins.services', []);\nangular.module('munchkins.values', []);\n\nangular\n  .module('munchkins', [\n    'ngRoute',\n    'munchkins.controllers',\n    'munchkins.services',\n    'munchkins.values'\n  ])\n  .config(function($routeProvider) {\n    $routeProvider\n      .when('/buildings', { templateUrl: 'views/buildings.html' })\n      .otherwise({ redirectTo: '/buildings' });\n  });\n","angular\n  .module('munchkins.controllers')\n  .controller('Buildings', function(Buildings) {\n    this.buildings = Buildings;\n  });\n","angular\n  .module('munchkins.controllers')\n  .controller('Game', function($interval, Const, Buildings, Game, Resources, Storage) {\n    $interval(Storage.save, Const.SAVE_RATE);\n\n    $interval(function() {\n\n    }, Const.TICK_RATE);\n  });\n","angular\n  .module('munchkins.services')\n  .service('Storage', function($interval, Const, Resources, Buildings) {\n    this.save = function() {\n      console.log('Saving game');\n      try {\n        const save = {\n          version: 1,\n          resources: {},\n          buildings: {}\n        };\n\n        _.forEach(Resources, function(res, key) {\n          save.resources[key] = {\n            value: res.value\n          };\n        });\n\n        _.forEach(Buildings, function(bld, key) {\n          save.buildings[key] = {\n            value: bld.value,\n            unlocked: bld.unlocked\n          };\n        });\n\n        localStorage.setItem(Const.SAVE_LOCATION, JSON.stringify(save));\n      } catch(err) {\n        console.error(err);\n      }\n    };\n\n    this.load = function() {\n      console.log('Loading game');\n      try {\n        const load = JSON.parse(localStorage.getItem(Const.SAVE_LOCATION));\n\n        _.forEach(load.resources, function(res, key) {\n          Resources[key].value = res.value;\n        });\n\n        _.forEach(load.buildings, function(bld, key) {\n          Buildings[key].value = bld.value;\n          Buildings[key].unlocked = bld.unlocked;\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n  });\n","/*\n  Buildings are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    unlocked: <true|false>\n    increase: <base price increase>\n    value: {\n      current: <current value>\n      limit: <max value, 0 if no limit>\n      level: <upgrade level>\n    }\n    requires: {\n      resources: {\n        <resource key>: {\n          value: <number>\n        }\n      }\n    }\n    provides: {\n      resources: {\n        <resource key>: {\n          value: <number>\n          rate: <number>\n        }\n      }\n    }\n  }\n*/\nangular\n  .module('munchkins.values')\n  .value('Buildings', {\n    collectFlowers: {\n      name: 'Collect Flowers',\n      description: 'Flowers are the staple of the Munchkin diet, collect them',\n      unlocked: true,\n      increase: 0,\n      value: {\n        current: 0,\n        max: 0,\n        level: 0\n      },\n      requires: {\n      },\n      provides: {\n        resources: {\n          flowers: {\n            value: 1,\n            rate: 0\n          }\n        }\n      }\n    }\n  });\n","angular\n  .module('munchkins.values')\n  .constant('Const', {\n    TICK_RATE: 250,\n    SAVE_RATE: 60000,\n    SAVE_LOCATION: 'munchkinsSave'\n  });\n","angular\n  .module('munchkins.values')\n  .value('Game', {\n  });\n","/*\n  Resources are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    value: {\n      current: <current value>\n      max: <max value>\n    }\n    rate: <rate of increase>\n  }\n*/\nangular\n  .module('munchkins.values')\n  .value('Resources', {\n    flowers: {\n      name: 'Flowers',\n      description: 'Flowers are the staple of the Munchkin diet',\n      value: {\n        current: 0,\n        limit: 0\n      },\n      rate: 0\n    }\n  });\n"],"sourceRoot":"."}