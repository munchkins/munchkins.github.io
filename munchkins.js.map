{"version":3,"sources":["app.js","controllers/buildings.js","controllers/game.js","controllers/log.js","controllers/resources.js","services/storage.js","values/buildings.js","values/game.js","values/resources.js"],"names":["angular","module","constant","TICK_RATE","SAVE_RATE","SAVE_LOCATION","config","$routeProvider","when","templateUrl","otherwise","redirectTo","controller","Buildings","Resources","this","buildings","unlockBuildings","forEach","bld","locked","requires","resources","rres","rrkey","res","rkey","value","current","isBuyable","key","incr","Math","pow","increase","buyable","req","buy","provides","prov","pkey","rate","$interval","Defaults","Game","Storage","tickloop","ticks","limit","min","load","save","service","console","log","version","game","localStorage","setItem","JSON","stringify","err","error","parse","getItem","collect","name","description","max","level","flowers","meadow"],"mappings":"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","file":"munchkins.js","sourcesContent":["'use strict';\n\nangular\n  .module('munchkins', ['ngRoute'])\n  .constant('Defaults', {\n    TICK_RATE: 250,\n    SAVE_RATE: 60000,\n    SAVE_LOCATION: 'munchkinsSave'\n  })\n  .config(function($routeProvider) {\n    $routeProvider\n      .when('/buildings', { templateUrl: 'views/buildings.html' })\n      .otherwise({ redirectTo: '/buildings' });\n  });\n","angular\n  .module('munchkins')\n  .controller('Buildings', function(Buildings, Resources) {\n    this.buildings = Buildings;\n\n    const unlockBuildings = function() {\n      angular.forEach(Buildings, function(bld) {\n        if (bld.locked) {\n          bld.locked = false;\n          angular.forEach(bld.requires.resources, function(rres, rrkey) {\n            if (!bld.locked) {\n              angular.forEach(Resources, function(res, rkey) {\n                if (rkey === rrkey) {\n                  bld.locked = !(res.value.current >= rres.value);\n                }\n              });\n            }\n          });\n        }\n      });\n    };\n\n    this.isBuyable = function(key) {\n      const incr = Math.pow(Buildings[key].increase, Buildings[key].value.current);\n      let buyable = true;\n\n      angular.forEach(Buildings[key].requires.resources, function(req, rkey) {\n        buyable = buyable && (Resources[rkey].value.current >= req.value * incr);\n      });\n\n      return buyable;\n    };\n\n    this.buy = function(key) {\n      if (!this.isBuyable(key)) {\n        return;\n      }\n\n      const incr = Math.pow(Buildings[key].increase, Buildings[key].value.current);\n\n      Buildings[key].value.current++;\n\n      angular.forEach(Buildings[key].requires.resources, function(req, rkey) {\n        Resources[rkey].value.current -= req.value * incr;\n      });\n\n      angular.forEach(Buildings[key].provides.resources, function(prov, pkey) {\n        Resources[pkey].value.current++;\n        Resources[pkey].rate += prov.rate;\n      });\n\n      unlockBuildings();\n    };\n  });\n","angular\n  .module('munchkins')\n  .controller('Game', function($interval, Defaults, Game, Buildings, Resources, Storage) {\n    const tickloop = function() {\n      Game.ticks++;\n\n      angular.forEach(Resources, function(res) {\n        res.value.current += res.rate;\n        if (res.value.limit) {\n          res.value.current = Math.min(res.value.current, res.value.limit);\n        }\n      });\n    };\n\n    Storage.load();\n\n    $interval(Storage.save, Defaults.SAVE_RATE);\n    $interval(tickloop, Defaults.TICK_RATE);\n  });\n","angular\n  .module('munchkins')\n  .controller('Log', function() {});\n","angular\n  .module('munchkins')\n  .controller('Resources', function(Resources) {\n    this.resources = Resources;\n  });\n","angular\n  .module('munchkins')\n  .service('Storage', function($interval, Defaults, Game, Resources, Buildings) {\n    this.save = function() {\n      console.log('Saving game');\n      try {\n        const save = {\n          version: 1,\n          game: {},\n          resources: {},\n          buildings: {}\n        };\n\n        save.game.ticks = Game.ticks;\n\n        angular.forEach(Resources, function(res, key) {\n          save.resources[key] = {\n            value: res.value\n          };\n        });\n\n        angular.forEach(Buildings, function(bld, key) {\n          save.buildings[key] = {\n            value: bld.value,\n            locked: bld.locked\n          };\n        });\n\n        localStorage.setItem(Defaults.SAVE_LOCATION, JSON.stringify(save));\n      } catch(err) {\n        console.error(err);\n      }\n    };\n\n    this.load = function() {\n      console.log('Loading game');\n      try {\n        const load = JSON.parse(localStorage.getItem(Defaults.SAVE_LOCATION));\n\n        load.game = load.game || {};\n        load.resources = load.resources || {};\n        load.buildings = load.buildings || {};\n\n        Game.ticks = load.game.ticks || Game.ticks;\n\n        angular.forEach(load.resources, function(res, key) {\n          Resources[key].value = res.value;\n        });\n\n        angular.forEach(load.buildings, function(bld, key) {\n          Buildings[key].value = bld.value;\n          Buildings[key].locked = bld.locked;\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n  });\n","/*\n  Buildings are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    unlocked: <true|false>\n    increase: <base price increase>\n    value: {\n      current: <current value>\n      limit: <max value, 0 if no limit>\n      level: <upgrade level>\n    }\n    requires: {\n      resources: {\n        <resource key>: {\n          value: <number>\n        }\n      }\n    }\n    provides: {\n      resources: {\n        <resource key>: {\n          value: <number>\n          rate: <number>\n        }\n      }\n    }\n  }\n*/\nangular\n  .module('munchkins')\n  .value('Buildings', {\n    collect: {\n      name: 'Collect Flowers',\n      description: 'Flowers are the staple of the Munchkin diet, collect them',\n      locked: false,\n      increase: 0,\n      value: {\n        current: 0,\n        max: 0,\n        level: 0\n      },\n      requires: {\n      },\n      provides: {\n        resources: {\n          flowers: {\n            value: 1,\n            rate: 0\n          }\n        }\n      }\n    },\n    meadow: {\n      name: 'Flower Meadow',\n      description: 'A naturally gorwing field of flowers',\n      locked: true,\n      increase: 1.1,\n      value: {\n        current: 0,\n        max: 0,\n        level: 0\n      },\n      requires: {\n        resources: {\n          flowers: {\n            value: 100\n          }\n        }\n      },\n      provides: {\n        resources: {\n          flowers: {\n            value: 0,\n            rate: 0.01\n          }\n        }\n      }\n    }\n  });\n","angular\n  .module('munchkins')\n  .value('Game', {\n    ticks: 0\n  });\n","/*\n  Resources are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    value: {\n      current: <current value>\n      max: <max value>\n    }\n    rate: <rate of increase>\n  }\n*/\nangular\n  .module('munchkins')\n  .value('Resources', {\n    flowers: {\n      name: 'Flowers',\n      description: 'Flowers are the staple of the Munchkin diet',\n      value: {\n        current: 0,\n        limit: 0\n      },\n      rate: 0\n    }\n  });\n"],"sourceRoot":"."}