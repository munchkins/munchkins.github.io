{"version":3,"sources":["app.js","controllers/buildings.js","controllers/game.js","controllers/log.js","controllers/resources.js","filters/numeric.js","services/buildings.js","services/game.js","services/resources.js","services/storage.js"],"names":[],"mappings":"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","file":"munchkins.js","sourcesContent":["'use strict';\n\nangular\n  .module('munchkins', ['ngRoute'])\n  .constant('Defaults', {\n    TICK_RATE: 250,\n    SAVE_RATE: 60000,\n    SAVE_LOCATION: 'munchkinsSave'\n  })\n  .config(function($routeProvider) {\n    $routeProvider\n      .when('/buildings', { templateUrl: 'views/buildings.html' })\n      .otherwise({ redirectTo: '/buildings' });\n  });\n","angular\n  .module('munchkins')\n  .controller('Buildings', function(Buildings, Resources) {\n    this.buildings = Buildings;\n    this.resources = Resources;\n  });\n","angular\n  .module('munchkins')\n  .controller('Game', function($interval, Defaults, Game, Buildings, Resources, Storage) {\n    const tickloop = function() {\n      Game.ticks++;\n\n      const resources = Resources.all();\n      angular.forEach(resources, function(resource) {\n        resource.value.current += resource.rate;\n        if (resource.value.limit) {\n          resource.value.current = Math.min(resource.value.current, resource.value.limit);\n        }\n      });\n    };\n\n    Storage.load();\n    Buildings.initResources();\n\n    $interval(Storage.save, Defaults.SAVE_RATE);\n    $interval(tickloop, Defaults.TICK_RATE);\n  });\n","angular\n  .module('munchkins')\n  .controller('Log', function() {});\n","angular\n  .module('munchkins')\n  .controller('Resources', function(Resources) {\n    this.resources = Resources;\n  });\n","angular\n  .module('munchkins')\n  .filter('numeric', function() {\n    const units = ['', 'K', 'M', 'G', 'T', 'P'];\n\n    return function(number, precision) {\n      const n = number || 0;\n      const u = Math.floor(Math.log(n) / Math.log(1000));\n\n      let p = precision || ((precision === 0) ? 0 : 2);\n      if ((p === 0) && (p >= 1000)) {\n        p = 2;\n      }\n\n      return (n < 1) ? (n.toFixed(p)) : ((n / 1000 ** Math.floor(u)).toFixed(p) + units[u]);\n    };\n  });\n","/*\n  Buildings are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    unlocked: <true|false>\n    increase: <base price increase>\n    value: {\n      current: <current value>\n      limit: <max value, 0 if no limit>\n      level: <upgrade level>\n    }\n    requires: {\n      resources: {\n        <resource key>: {\n          value: <number>\n        }\n      }\n    }\n    provides: {\n      resources: {\n        <resource key>: {\n          value: <number>\n          rate: <number>\n        }\n      }\n    }\n  }\n*/\nangular\n  .module('munchkins')\n  .service('Buildings', function(Resources) {\n    const buildings = {\n      collect: {\n        name: 'Collect Flowers',\n        description: 'Flowers are the staple of the Munchkin diet, collect them',\n        locked: false,\n        increase: 0,\n        value: {\n          current: 0,\n          max: 0,\n          level: 0\n        },\n        requires: {\n        },\n        provides: {\n          resources: {\n            flowers: {\n              value: 1,\n              rate: 0\n            }\n          }\n        }\n      },\n      meadow: {\n        name: 'Flower Meadow',\n        description: 'A naturally growing field of flowers',\n        locked: true,\n        increase: 1.1,\n        value: {\n          current: 0,\n          max: 0,\n          level: 0\n        },\n        requires: {\n          resources: {\n            flowers: {\n              value: 100\n            }\n          }\n        },\n        provides: {\n          resources: {\n            flowers: {\n              value: 0,\n              rate: 0.01\n            }\n          }\n        }\n      }\n    };\n\n    const unlock = function() {\n      angular.forEach(buildings, function(building) {\n        if (building.locked) {\n          building.locked = false;\n\n          angular.forEach(building.requires.resources, function(r, k) {\n            if (!building.locked) {\n              const resource = Resources.get(k);\n              building.locked = !(resource.value.current >= r.value);\n            }\n          });\n        }\n      });\n    };\n\n    this.isBuyable = function(key) {\n      const building = buildings[key];\n      const incr = Math.pow(building.increase, building.value.current);\n      let buyable = true;\n\n      angular.forEach(building.requires.resources, function(r, k) {\n        const resource = Resources.get(k);\n        buyable = buyable && (resource.value.current >= r.value * incr);\n      });\n\n      return buyable;\n    };\n\n    this.buy = function(key) {\n      if (!this.isBuyable(key)) {\n        return;\n      }\n\n      const building = buildings[key];\n      const incr = Math.pow(building.increase, building.value.current);\n\n      building.value.current++;\n\n      angular.forEach(building.requires.resources, function(r, k) {\n        const resource = Resources.get(k);\n        resource.value.current -= r.value * incr;\n      });\n\n      angular.forEach(building.provides.resources, function(p, k) {\n        const resource = Resources.get(k);\n        resource.value.current++;\n        resource.rate += p.rate;\n      });\n\n      unlock();\n    };\n\n    this.prices = function(key) {\n      const building = buildings[key];\n      const incr = Math.pow(building.increase, building.value.current);\n\n      angular.forEach(building.requires.resources, function(r, k) {\n        const price = r.value * incr;\n        const resource = Resources.get(k);\n\n        r.buynow = price;\n        r.affordable = resource.value.current >= price;\n        r.name = resource.name;\n      });\n\n      return building.requires.resources;\n    };\n\n    this.initResources = function() {\n      angular.forEach(buildings, function(building) {\n        angular.forEach(building.provides.resources, function(p, k) {\n          const resource = Resources.get(k);\n          resource.rate += building.value.current * p.rate;\n        });\n      });\n    };\n\n    this.all = function() {\n      return buildings;\n    };\n\n    this.get = function(key) {\n      return buildings[key];\n    };\n  });\n","angular\n  .module('munchkins')\n  .service('Game', function() {\n    const game = {\n      ticks: 0\n    };\n\n    this.get = function() {\n      return game;\n    };\n  });\n","/*\n  Resources are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    value: {\n      current: <current value>\n      max: <max value>\n    }\n    rate: <rate of increase>\n  }\n*/\nangular\n  .module('munchkins')\n  .service('Resources', function() {\n    const resources = {\n      flowers: {\n        name: 'Flowers',\n        description: 'Flowers are the staple of the Munchkin diet',\n        value: {\n          current: 0,\n          limit: 0\n        },\n        rate: 0\n      }\n    };\n\n    this.all = function() {\n      return resources;\n    };\n\n    this.get = function(key) {\n      return resources[key];\n    };\n  });\n","angular\n  .module('munchkins')\n  .service('Storage', function($interval, Defaults, Game, Resources, Buildings) {\n    this.save = function() {\n      console.log('Saving game');\n      try {\n        const save = {\n          version: 1,\n          game: {},\n          resources: {},\n          buildings: {}\n        };\n\n        const game = Game.get();\n        save.game.ticks = game.ticks;\n\n        const resources = Resources.all();\n        angular.forEach(resources, function(r, k) {\n          save.resources[k] = {\n            value: r.value\n          };\n        });\n\n        const buildings = Buildings.all();\n        angular.forEach(buildings, function(b, k) {\n          save.buildings[k] = {\n            value: b.value,\n            locked: b.locked\n          };\n        });\n\n        localStorage.setItem(Defaults.SAVE_LOCATION, JSON.stringify(save));\n      } catch(err) {\n        console.error(err);\n      }\n    };\n\n    this.load = function() {\n      console.log('Loading game');\n      try {\n        const load = JSON.parse(localStorage.getItem(Defaults.SAVE_LOCATION));\n\n        load.game = load.game || {};\n        load.resources = load.resources || {};\n        load.buildings = load.buildings || {};\n\n        const game = Game.get();\n        game.ticks = load.game.ticks || game.ticks;\n\n        angular.forEach(load.resources, function(r, k) {\n          const resource = Resources.get(k);\n          resource.value = r.value;\n        });\n\n        angular.forEach(load.buildings, function(b, k) {\n          const building = Buildings.get(k);\n          building.value = b.value;\n          building.locked = b.locked;\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n  });\n"],"sourceRoot":"."}