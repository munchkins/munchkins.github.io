{"version":3,"sources":["app.js","controllers/buildings.js","controllers/crafting.js","controllers/game.js","controllers/log.js","controllers/resources.js","controllers/subbar.js","controllers/topbar.js","controllers/tribe.js","directives/actionButton.js","filters/numeric.js","services/actions.js","services/buildings.js","services/crafting.js","services/game.js","services/resources.js","services/tribe.js"],"names":[],"mappings":"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","file":"munchkins.js","sourcesContent":["'use strict';\n\nangular\n  .module('munchkins', ['ngRoute'])\n  .constant('Defaults', {\n    TICK_RATE: 250,\n    SAVE_RATE: 60000,\n    SAVE_LOCATION: 'munchkinsSave',\n    DAY_TICKS: 200,\n    SEASON_DAYS: 98,\n    SEASON_TICKS: 98 * 200,\n    YEAR_DAYS: 4 * 98,\n    YEAR_TICKS: 4 * 98 * 200\n  })\n  .config(function($routeProvider) {\n    $routeProvider\n      .when('/buildings', { templateUrl: 'views/buildings.html' })\n      .when('/tribe', { templateUrl: 'views/tribe.html' })\n      .otherwise({ redirectTo: '/buildings' });\n  });\n","angular\n  .module('munchkins')\n  .controller('Buildings', function(Actions, Buildings) {\n    this.buildings = Buildings.all();\n\n    this.buy = Actions.buy;\n\n    this.isBuyable = Actions.isBuyable;\n    this.hasRequires = Actions.hasRequires;\n    this.hasProvides = Actions.hasProvides;\n\n    this.requires = Actions.requires;\n    this.provides = Actions.provides;\n  });\n","angular\n  .module('munchkins')\n  .controller('Crafting', function(Actions, Crafting) {\n    this.crafting = Crafting.all();\n\n    this.buy = Actions.buy;\n\n    this.isBuyable = Actions.isBuyable;\n    this.hasRequires = Actions.hasRequires;\n    this.hasProvides = Actions.hasProvides;\n\n    this.requires = Actions.requires;\n    this.provides = Actions.provides;\n  });\n","angular\n  .module('munchkins')\n  .controller('Game', function() {});\n","angular\n  .module('munchkins')\n  .controller('Log', function() {});\n","angular\n  .module('munchkins')\n  .controller('Resources', function(Resources) {\n    this.resources = Resources.all();\n  });\n","angular\n  .module('munchkins')\n  .controller('Subbar', function($location, Buildings, Tribe) {\n    this.totalBuildings = Buildings.activeTotal;\n    this.totalTribe = Tribe.total;\n\n    this.allocTribe = function() {\n      return Tribe.total() - Tribe.free();\n    };\n\n    this.isOn = function(path) {\n      return $location.path() === path;\n    };\n  });\n","angular\n  .module('munchkins')\n  .controller('Topbar', function(Game) {\n    this.save = Game.save;\n    this.wipe = Game.wipe;\n    this.calendar = Game.calendar;\n    this.bonus = Game.bonus;\n  });\n","angular\n  .module('munchkins')\n  .controller('Tribe', function(Actions, Tribe) {\n    this.total = Tribe.total;\n    this.free = Tribe.free;\n    this.types = Tribe.all();\n\n    this.buy = Actions.buy;\n\n    this.isBuyable = Actions.isBuyable;\n    this.hasRequires = Actions.hasRequires;\n    this.hasProvides = Actions.hasProvides;\n\n    this.requires = Actions.requires;\n    this.provides = Actions.provides;\n  });\n","angular\n  .module('munchkins')\n  .directive('actionButton', function() {\n    return {\n      restrict: 'E',\n      scope: {\n        ctrl: '=',\n        item: '='\n      },\n      templateUrl: 'views/templates/actionButton.html'\n    };\n  });\n","angular\n  .module('munchkins')\n  .filter('numeric', function() {\n    const units = ['', 'K', 'M', 'G', 'T', 'P'];\n\n    return function(number, precision) {\n      const n = Math.abs(number) || 0;\n      const u = Math.floor(Math.log(n) / Math.log(1000));\n\n      let p = precision || ((precision === 0) ? 0 : 3);\n      if ((p === 0) && (n >= 1000)) {\n        p = 3;\n      }\n\n      return (n < 1) ? (n.toFixed(p)) : ((n / 1000 ** Math.floor(u)).toFixed(p) + units[u]);\n    };\n  });\n","angular\n  .module('munchkins')\n  .service('Actions', function(Buildings, Crafting, Resources, Tribe) {\n    const unlockAll = function() {\n      const unlockOne = function(item) {\n        if (item.locked) {\n          let locked = false;\n\n          _.forEach(item.requires.buildings, function(b, k) {\n            if (!locked) {\n              locked = !(Buildings.get(k).value.current >= b.value);\n            }\n          });\n\n          _.forEach(item.requires.resources, function(r, k) {\n            if (!locked) {\n              locked = !(Resources.get(k).value.current >= r.value);\n            }\n          });\n\n          item.locked = locked;\n        }\n      };\n\n      _.forEach(Buildings.all(), unlockOne);\n      _.forEach(Crafting.all(), unlockOne);\n      _.forEach(Tribe.all(), unlockOne);\n    };\n\n    this.priceMultiplier = function(item) {\n      return Math.pow(item.increase, item.value.current);\n    };\n\n    this.isBuyable = function(item) {\n      const incr = this.priceMultiplier(item);\n      let buyable = !item.locked && (Tribe.free() >= (item.requires.tribe || 0));\n\n      _.forEach(item.requires.resources, function(r, k) {\n        if (buyable) {\n          buyable = Resources.get(k).value.current >= r.value * incr;\n        }\n      });\n\n      return buyable;\n    };\n\n    this.buy = function(item) {\n      if (!this.isBuyable(item)) {\n        return false;\n      }\n\n      const incr = this.priceMultiplier(item);\n      item.value.current++;\n\n      _.forEach(item.requires.resources, function(r, k) {\n        const resource = Resources.get(k);\n        resource.value.current -= (r.value || 0) * incr;\n        resource.rate -= (r.rate || 0);\n      });\n\n      _.forEach(item.provides.resources, function(p, k) {\n        const resource = Resources.get(k);\n        resource.value.current += (p.value || 0);\n        resource.rate += (p.rate || 0);\n      });\n\n      Tribe.add(-1 * (item.requires.tribe || 0));\n      Tribe.add(item.provides.tribe || 0);\n\n      unlockAll();\n\n      return true;\n    };\n\n    this.provides = function(item) {\n      _.forEach(item.provides.resources, function(r, k) {\n        r.name = Resources.get(k).name;\n      });\n\n      return _.filter(item.provides.resources, {});\n    };\n\n    this.requires = function(item) {\n      const incr = this.priceMultiplier(item);\n\n      _.forEach(item.requires.resources, function(r, k) {\n        const price = r.value * incr;\n        const resource = Resources.get(k);\n\n        r.buynow = price;\n        r.affordable = resource.value.current >= price;\n        r.name = resource.name;\n      });\n\n      return _.filter(item.requires.resources, {});\n    };\n\n    this.initResource = function(item) {\n      _.forEach(item.provides.resources, function(p, k) {\n        const resource = Resources.get(k);\n        resource.rate += item.value.current * (p.rate || 0);\n      });\n\n      _.forEach(item.requires.resources, function(r, k) {\n        const resource = Resources.get(k);\n        resource.rate -= item.value.current * (r.rate || 0);\n      });\n    };\n\n    this.initResources = function() {\n      _.forEach(Buildings.all(), this.initResource);\n      _.forEach(Tribe.all(), this.initResource);\n    };\n  });\n","angular\n  .module('munchkins')\n  .service('Buildings', function() {\n    const buildings = {\n      fire: {\n        name: 'Fire',\n        description: 'Fire is the center of the up-and-comming community, providing a place to cook and general happiness',\n        increase: 1.11,\n        requires: {\n          resources: {\n            stems: { value: 10, rate: 0.02 }\n          }\n        },\n        provides: {\n          resources: {\n            happiness: { value: 0.95, rate: 0.001 },\n            charcoal: { value: 0, rate: 0.0015 }\n          }\n        }\n      },\n      trap: {\n        name: 'Trap',\n        description: 'A small trap used to catch animals that wander across the path',\n        increase: 1.11,\n        requires: {\n          resources: {\n            stems: { value: 20, rate: 0 },\n            seeds: { value: 5, rate: 0 }\n          }\n        },\n        provides: {\n          resources: {\n            furs: { value: 0, rate: 0.001 }\n          }\n        }\n      },\n      shelter: {\n        name: 'Shelter',\n        description: 'A basic shelter made from flower stems with space for one Munchkin',\n        increase: 1.11,\n        requires: {\n          resources: {\n            furs: { value: 5, rate: 0 },\n            stems: { value: 100, rate: 0 }\n          }\n        },\n        provides: {\n          tribe: 1\n        }\n      },\n      garden: {\n        name: 'Garden',\n        description: 'A naturally growing field of flowers which can be harvested',\n        increase: 1.11,\n        requires: {\n          resources: {\n            seeds: { value: 75, rate: 0 },\n            water: { value: 0, rate: 0.001 }\n          }\n        },\n        provides: {\n          resources: {\n            flowers: { value: 0, rate: 0.01 },\n            rocks: { value: 0, rate: 0.001 }\n          }\n        }\n      },\n      hut: {\n        name: 'Hut',\n        description: 'A rock and stem shelter that has space for two additional Munchkins',\n        increase: 1.125,\n        requires: {\n          resources: {\n            rocks: { value: 50, rate: 0 },\n            furs: { value: 25, rate: 0 },\n            stems: { value: 150, rate: 0 }\n          }\n        },\n        provides: {\n          tribe: 2\n        }\n      },\n      pond: {\n        name: 'Pond',\n        description: 'A water collection point that porvides a clean source of water',\n        increase: 1.11,\n        requires: {\n          resources: {\n            rocks: { value: 50, rate: 0 },\n            tools: { value: 10, rate: 0 }\n          }\n        },\n        provides: {\n          resources: {\n            water: { value: 0, rate: 0.025 }\n          }\n        }\n      },\n      quarry: {\n        name: 'Quarry',\n        description: 'An area where rocks can be harvested for use in buildings and tools',\n        increase: 1.11,\n        requires: {\n          resources: {\n            rocks: { value: 80, rate: 0 },\n            tools: { value: 15, rate: 0.0025 }\n          }\n        },\n        provides: {\n          resources: {\n            rocks: { value: 0, rate: 0.01 }\n          }\n        }\n      },\n      monolith: {\n        name: 'Monolith',\n        description: 'A large religious structure that is made of rock, used in ceremonies accross Munchkinland',\n        increase: 1.125,\n        requires: {\n          resources: {\n            rocks: { value: 1000, rate: 0 },\n            tools: { value: 500, rate: 0 }\n          }\n        }\n      }\n    };\n\n    _.forEach(buildings, function(item) {\n      item.increase = item.increase || 1.0;\n      item.locked = _.isUndefined(item.locked) ? true : item.locked;\n      item.value = item.value || { current: 0, max: 0, level: 0 };\n\n      item.requires = item.requires || {};\n      item.requires.resources = item.requires.resources || {};\n      item.hasRequires = !!Object.keys(item.requires.resources).length;\n\n      item.provides = item.provides || {};\n      item.provides.resources = item.provides.resources || {};\n      item.hasProvides = !!Object.keys(item.provides.resources).length;\n    });\n\n    this.activeTotal = function() {\n      let total = 0;\n      _.forEach(buildings, function(building) {\n        total += building.locked ? 0 : 1;\n      });\n      return total;\n    };\n\n    this.all = function() {\n      return _.filter(buildings, {});\n    };\n\n    this.keys = function() {\n      return Object.keys(buildings);\n    };\n\n    this.get = function(key) {\n      return buildings[key];\n    };\n\n    this.save = function(to) {\n      _.forEach(buildings, function(b, k) {\n        to[k] = {\n          value: b.value,\n          locked: b.locked\n        };\n      });\n    };\n\n    this.load = function(from) {\n      _.forEach(from, function(b, k) {\n        const building = buildings[k];\n        if (building) {\n          building.value = b.value;\n          building.locked = b.locked;\n        }\n      });\n    };\n  });\n","angular\n  .module('munchkins')\n  .service('Crafting', function() {\n    const crafting = {\n      collect: {\n        name: 'Gather Flowers',\n        description: 'Flowers are the staple of the Munchkin diet, collect them',\n        locked: false,\n        provides: {\n          resources: {\n            flowers: { value: 1, rate: 0 }\n          }\n        }\n      },\n      processing: {\n        name: 'Process Flowers',\n        description: 'Processes and deconstructs flowers into petals, stems & edible components',\n        requires: {\n          resources: {\n            flowers: { value: 10, rate: 0 }\n          }\n        },\n        provides: {\n          resources: {\n            seeds: { value: 2, rate: 0 },\n            stems: { value: 9, rate: 0 },\n            petals: { value: 75, rate: 0 }\n          }\n        }\n      },\n      press: {\n        name: 'Press Petals',\n        description: 'Process flower petals into petal paper',\n        requires: {\n          resources: {\n            petals: { value: 1000, rate: 0 }\n          }\n        },\n        provides: {\n          resources: {\n            paper: { value: 2, rate: 0 }\n          }\n        }\n      },\n      hunt: {\n        name: 'Hunt & Gather',\n        description: 'Search for food, resources and items outside of the community',\n        requires: {\n          resources: {\n            tools: { value: 50, rate: 0 }\n          }\n        },\n        provides: {\n          resources: {\n            rocks: { value: 5, rate: 0 },\n            seeds: { value: 25, rate: 0 },\n            furs: { value: 7, rate: 0 }\n          }\n        }\n      }\n    };\n\n    _.forEach(crafting, function(item) {\n      item.increase = item.increase || 1.0;\n      item.locked = _.isUndefined(item.locked) ? true : item.locked;\n      item.value = item.value || { current: 0, max: 0, level: 0 };\n\n      item.requires = item.requires || {};\n      item.requires.resources = item.requires.resources || {};\n      item.hasRequires = !!Object.keys(item.requires.resources).length;\n\n      item.provides = item.provides || {};\n      item.provides.resources = item.provides.resources || {};\n      item.hasProvides = !!Object.keys(item.provides.resources).length;\n    });\n\n    this.all = function() {\n      return _.filter(crafting, {});\n    };\n\n    this.keys = function() {\n      return Object.keys(crafting);\n    };\n\n    this.get = function(key) {\n      return crafting[key];\n    };\n\n    this.save = function(to) {\n      _.forEach(crafting, function(c, k) {\n        to[k] = {\n          value: c.value,\n          locked: c.locked\n        };\n      });\n    };\n\n    this.load = function(from) {\n      _.forEach(from, function(c, k) {\n        const craft = crafting[k];\n        if (craft) {\n          craft.value = c.value;\n          craft.locked = c.locked;\n        }\n      });\n    };\n  });\n","angular\n  .module('munchkins')\n  .service('Game', function($interval, Actions, Buildings, Crafting, Defaults, Resources, Tribe) {\n    const game = {\n      bonus: 0,\n      ticks: 0,\n      calendar: {\n        day: 0,\n        season: 0,\n        year: 0\n      }\n    };\n\n    this.game = function() {\n      return game;\n    };\n\n    this.calendar = function() {\n      return game.calendar;\n    };\n\n    this.calcCalendar = function() {\n      const days = Math.floor(game.ticks / Defaults.DAY_TICKS);\n\n      game.calendar.year = Math.floor(days / Defaults.YEAR_DAYS);\n      game.calendar.season = Math.floor((days % Defaults.YEAR_DAYS) / Defaults.SEASON_DAYS);\n      game.calendar.day = (days % Defaults.YEAR_DAYS) % Defaults.SEASON_DAYS;\n    };\n\n    this.bonus = function() {\n      return game.bonus;\n    };\n\n    this.calcBonus = function() {\n      game.bonus = 0.01 * (game.ticks / Defaults.YEAR_TICKS);\n    };\n\n    this.tick = function() {\n      game.ticks++;\n\n      this.calcBonus();\n      this.calcCalendar();\n\n      const resources = Resources.all();\n      _.forEach(resources, function(resource) {\n        resource.gamerate = resource.rate; // (resource.rate * (1.0 + game.bonus));\n        resource.value.current = Math.max(0, resource.gamerate + resource.value.current);\n        if (resource.value.limit) {\n          resource.value.current = Math.min(resource.value.current, resource.value.limit);\n        }\n      });\n    };\n\n    this.wipe = function() {\n      console.log('Wiping game');\n      try {\n        localStorage.setItem(Defaults.SAVE_LOCATION, JSON.stringify({}));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.save = function() {\n      console.log('Saving game');\n      try {\n        const save = {\n          version: 1,\n          game: {\n            ticks: game.ticks\n          },\n          buildings: {},\n          crafting: {},\n          resources: {},\n          tribe: {}\n        };\n\n        Buildings.save(save.buildings);\n        Crafting.save(save.crafting);\n        Resources.save(save.resources);\n        Tribe.save(save.tribe);\n\n        localStorage.setItem(Defaults.SAVE_LOCATION, JSON.stringify(save));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.load = function() {\n      console.log('Loading game');\n      try {\n        const load = JSON.parse(localStorage.getItem(Defaults.SAVE_LOCATION)) || {};\n\n        game.ticks = (load.game || {}).ticks || game.ticks;\n\n        Buildings.load(load.buildings || {});\n        Crafting.load(load.crafting || {});\n        Resources.load(load.resources || {});\n        Tribe.load(load.tribe || {});\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.load();\n    Actions.initResources();\n\n    $interval(this.save, Defaults.SAVE_RATE);\n    $interval(this.tick, Defaults.TICK_RATE);\n  });\n","angular\n  .module('munchkins')\n  .service('Resources', function() {\n    const resources = {\n      flowers: {\n        name: 'Flowers',\n        description: 'Flowers are the staple of the Munchkin economy, diet and production'\n      },\n      stems: {\n        name: 'Stems',\n        description: 'Flower stems act as a basic building block for light structures'\n      },\n      petals: {\n        name: 'Petals',\n        description: 'Flower petals are a decoration with various uses in and around the house and community'\n      },\n      paper: {\n        name: 'Paper',\n        description: 'Petal paper are a fine resource'\n      },\n      furs: {\n        name: 'Furs',\n        description: 'An animal byproduct that has uses in and around the village'\n      },\n      charcoal: {\n        name: 'Charcoal',\n        description: 'A byproduct of burning stems, wood and other resources'\n      },\n      rocks: {\n        name: 'Rocks',\n        description: 'Rocks are a by-product of farming and produced by mining'\n      },\n      tools: {\n        name: 'Tools',\n        description: 'Tools makes hard tasks easier'\n      },\n      seeds: {\n        name: 'Seeds',\n        description: 'Seeds are is always needed as an edible resource, on this planet or another'\n      },\n      water: {\n        name: 'Water',\n        description: 'Water is a core resource used for drinking, feeding crops and as a base for production'\n      },\n      happiness: {\n        name: 'Happiness',\n        description: 'The overal state of mind and contentment of the actual tribe'\n      },\n      faith: {\n        name: 'Faith',\n        description: 'A core ingrediesnt in any religious ceremony, required for any festivals'\n      }\n    };\n\n    _.forEach(resources, function(item) {\n      item.rate = item.rate || 0;\n      item.gamerate = 0;\n      item.value = item.value || { current: 0, limit: 0 };\n    });\n\n    this.all = function() {\n      return _.filter(resources, {});\n    };\n\n    this.keys = function() {\n      return Object.keys(resources);\n    };\n\n    this.get = function(key) {\n      return resources[key];\n    };\n\n    this.save = function(to) {\n      _.forEach(resources, function(r, k) {\n        to[k] = {\n          value: r.value\n        };\n      });\n    };\n\n    this.load = function(from) {\n      _.forEach(from, function(r, k) {\n        const resource = resources[k];\n        if (resource) {\n          resource.value = r.value;\n        }\n      });\n    };\n  });\n","angular\n  .module('munchkins')\n  .service('Tribe', function() {\n    const types = {\n      cook: {\n        name: 'Cook',\n        description: 'Processes flowers to make food for the tribe',\n        requires: {\n          buildings: {\n            fire: { value: 1 }\n          },\n          resources: {\n            flowers: { value: 0, rate: 0.04 }\n          },\n          tribe: 1\n        },\n        provides: {\n          resources: {\n            seeds: { value: 0, rate: 0.01 },\n            stems: { value: 0, rate: 0.04 },\n            petals: { value: 0, rate: 0.4 }\n          }\n        }\n      },\n      farmer: {\n        name: 'Farmer',\n        description: 'A farmer works the gardens for additional production of resources',\n        requires: {\n          buildings: {\n            garden: { value: 1 }\n          },\n          tribe: 1\n        },\n        provides: {\n          resources: {\n            flowers: { value: 0, rate: 0.01 },\n            rocks: { value: 0, rate: 0.001 }\n          }\n        }\n      },\n      tooler: {\n        name: 'Tool Maker',\n        description: 'The tribe member creates rock tools for use in hunting, cooking and farming',\n        requires: {\n          buildings: {\n            quarry: { value: 1 }\n          },\n          resources: {\n            rocks: { value: 0, rate: 0.025 }\n          },\n          tribe: 1\n        },\n        provides: {\n          resources: {\n            tools: { value: 0, rate: 0.0125 }\n          }\n        }\n      },\n      priest: {\n        name: 'Priest',\n        description: 'A core member of any religious ceremony, providing direct access to another world',\n        requires: {\n          buildings: {\n            monolith: { value: 1 }\n          },\n          resources: {\n            tools: { value: 0, rate: 0.001 }\n          },\n          tribe: 1\n        },\n        provides: {\n          resources: {\n            faith: { value: 0, rate: 0.0025 }\n          }\n        }\n      }\n    };\n\n    const tribe = {\n      free: 0,\n      types: types\n    };\n\n    _.forEach(types, function(item) {\n      item.increase = item.increase || 1.0;\n      item.locked = _.isUndefined(item.locked) ? true : item.locked;\n      item.value = item.value || { current: 0, max: 0, level: 0 };\n\n      item.requires = item.requires || {};\n      item.requires.resources = item.requires.resources || {};\n      item.requires.resources.seeds = { value: 0, rate: 0.0025 };\n      item.requires.resources.water = { value: 0, rate: 0.0025 };\n      item.hasRequires = !!Object.keys(item.requires.resources).length;\n\n      item.provides = item.provides || {};\n      item.provides.resources = item.provides.resources || {};\n      item.hasProvides = !!Object.keys(item.provides.resources).length;\n    });\n\n    this.all = function() {\n      return _.filter(types, {});\n    };\n\n    this.keys = function() {\n      return Object.keys(types);\n    };\n\n    this.get = function(type) {\n      return types[type];\n    };\n\n    this.add = function(number) {\n      tribe.free += number;\n    };\n\n    this.free = function() {\n      return tribe.free;\n    };\n\n    this.total = function() {\n      let count = 0;\n      _.forEach(types, function(type) {\n        count += type.value.current;\n      });\n      return tribe.free + count;\n    };\n\n    this.save = function(to) {\n      to.free = tribe.free;\n      to.types = {};\n      _.forEach(types, function(type, key) {\n        to.types[key] = {\n          locked: type.locked,\n          value: type.value\n        };\n      });\n    };\n\n    this.load = function(from) {\n      tribe.free = from.free || tribe.free;\n      _.forEach(from.types, function(t, k) {\n        const type = types[k];\n        if (type) {\n          type.locked = t.locked;\n          type.value = t.value;\n        }\n      });\n    };\n  });\n"],"sourceRoot":"."}