{"version":3,"sources":["app.js","services/storage.js","controllers/buildings.js","controllers/game.js","controllers/resources.js","values/buildings.js","values/game.js","values/resources.js"],"names":["angular","module","constant","TICK_RATE","SAVE_RATE","SAVE_LOCATION","config","$routeProvider","when","templateUrl","otherwise","redirectTo","service","$interval","Defaults","Resources","Buildings","this","save","console","log","version","resources","buildings","_","forEach","res","key","value","bld","unlocked","localStorage","setItem","JSON","stringify","err","error","load","parse","getItem","controller","buy","b","current","requires","req","rkey","r","provides","prov","pkey","rate","Game","Storage","collectFlowers","name","description","increase","max","level","flowers","limit"],"mappings":"AAAA,YAEAA,SACGC,OAAO,aAAc,YACrBC,SAAS,YACRC,UAAW,IACXC,UAAW,IACXC,cAAe,kBAEhBC,QAAA,iBAAO,SAASC,GACfA,EACGC,KAAK,cAAgBC,YAAa,yBAClCC,WAAYC,WAAY;ACZ/B,YAAAX,SACGC,OAAO,aACPW,QAAQ,WAAA,YAAA,WAAA,YAAA,YAAW,SAASC,EAAWC,EAAUC,EAAWC,GAC3DC,KAAKC,KAAO,WACVC,QAAQC,IAAI,cACZ,MACA,WAAE,GAAMF,IACJG,QAAS,EACTC,aACAC,aAGFC,GAAEC,QAAQV,EAAW,SAASW,EAAKC,GACjCT,EAAKI,UAAUK,IACbC,MAAOF,EAAIE,SAIfJ,EAAEC,QAAQT,EAAW,SAASa,EAAKF,GACjCT,EAAKK,UAAUI,IACbC,MAAOC,EAAID,MACXE,SAAUD,EAAIC,YAIlBC,aAAaC,QAAQlB,EAAST,cAAe4B,KAAKC,UAAUhB,OAC5D,MAAMiB,GACNhB,QAAQiB,MAAMD,KAIlBlB,KAAKoB,KAAO,WACVlB,QAAQC,IAAI,eACZ,KACE,GAAMiB,GAAOJ,KAAKK,MAAMP,aAAaQ,QAAQzB,EAAST,eAEtDmB,GAAEC,QAAQY,EAAKf,UAAW,SAASI,EAAKC,GACtCZ,EAAUY,GAAKC,MAAQF,EAAIE,QAG7BJ,EAAEC,QAAQY,EAAKd,UAAW,SAASM,EAAKF,GACtCX,EAAUW,GAAKC,MAAQC,EAAID,MAC3BZ,EAAUW,GAAKG,SAAWD,EAAIC,WAEhC,MAAOK,GACPhB,QAAQiB,MAAMD;AC7CtB,YAAAnC,SACGC,OAAO,aACPuC,WAAW,aAAA,YAAA,YAAa,SAASxB,EAAWD,GAC3CE,KAAKM,UAAYP,EAEjBC,KAAKwB,IAAM,SAASd,GAClB,GAAMe,GAAI1B,EAAUW,EACpBe,GAAEd,MAAMe,UAERnB,EAAEC,QAAQiB,EAAEE,SAAStB,UAAW,SAASuB,EAAKC,GAC5C,GAAMC,GAAIhC,EAAU+B,EACpBC,GAAEnB,MAAMe,SAAWE,EAAIjB,QAGzBJ,EAAEC,QAAQiB,EAAEM,SAAS1B,UAAW,SAAS2B,EAAMC,GAC7C,GAAMH,GAAIhC,EAAUmC,EACpBH,GAAEnB,MAAMe,UACRI,EAAEI,MAAQF,EAAKE;ACjBvB,YAAAnD,SACGC,OAAO,aACPuC,WAAW,QAAA,YAAA,WAAA,YAAA,OAAA,YAAA,UAAQ,SAAS3B,EAAWC,EAAUE,EAAWoC,EAAMrC,EAAWsC,GAC5EA,EAAQhB,OACRxB,EAAUwC,EAAQnC,KAAMJ,EAASV,WAEjCS,EAAU,aAEPC,EAASX;ACRhB,YAAAH,SACGC,OAAO,aACPuC,WAAW,aAAA,YAAa,SAASzB,GAChCE,KAAKK,UAAYP;AC2BrB,YAAAf,SACGC,OAAO,aACP2B,MAAM,aACL0B,gBACEC,KAAM,kBACNC,YAAa,4DACb1B,UAAU,EACV2B,SAAU,EACV7B,OACEe,QAAS,EACTe,IAAK,EACLC,MAAO,GAETf,YAEAI,UACE1B,WACEsC,SACEhC,MAAO,EACPuB,KAAM;ACjDlB,YAAAnD,SACGC,OAAO,aACP2B,MAAM;ACWT,YAAA5B,SACGC,OAAO,aACP2B,MAAM,aACLgC,SACEL,KAAM,UACNC,YAAa,8CACb5B,OACEe,QAAS,EACTkB,MAAO,GAETV,KAAM","file":"munchkins.js","sourcesContent":["'use strict';\n\nangular\n  .module('munchkins', ['ngRoute'])\n  .constant('Defaults', {\n    TICK_RATE: 250,\n    SAVE_RATE: 60000,\n    SAVE_LOCATION: 'munchkinsSave'\n  })\n  .config(function($routeProvider) {\n    $routeProvider\n      .when('/buildings', { templateUrl: 'views/buildings.html' })\n      .otherwise({ redirectTo: '/buildings' });\n  });\n","angular\n  .module('munchkins')\n  .service('Storage', function($interval, Defaults, Resources, Buildings) {\n    this.save = function() {\n      console.log('Saving game');\n      try {\n        const save = {\n          version: 1,\n          resources: {},\n          buildings: {}\n        };\n\n        _.forEach(Resources, function(res, key) {\n          save.resources[key] = {\n            value: res.value\n          };\n        });\n\n        _.forEach(Buildings, function(bld, key) {\n          save.buildings[key] = {\n            value: bld.value,\n            unlocked: bld.unlocked\n          };\n        });\n\n        localStorage.setItem(Defaults.SAVE_LOCATION, JSON.stringify(save));\n      } catch(err) {\n        console.error(err);\n      }\n    };\n\n    this.load = function() {\n      console.log('Loading game');\n      try {\n        const load = JSON.parse(localStorage.getItem(Defaults.SAVE_LOCATION));\n\n        _.forEach(load.resources, function(res, key) {\n          Resources[key].value = res.value;\n        });\n\n        _.forEach(load.buildings, function(bld, key) {\n          Buildings[key].value = bld.value;\n          Buildings[key].unlocked = bld.unlocked;\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n  });\n","angular\n  .module('munchkins')\n  .controller('Buildings', function(Buildings, Resources) {\n    this.buildings = Buildings;\n\n    this.buy = function(key) {\n      const b = Buildings[key];\n      b.value.current++;\n\n      _.forEach(b.requires.resources, function(req, rkey) {\n        const r = Resources[rkey];\n        r.value.current -= req.value;\n      });\n\n      _.forEach(b.provides.resources, function(prov, pkey) {\n        const r = Resources[pkey];\n        r.value.current++;\n        r.rate += prov.rate;\n      });\n    };\n  });\n","angular\n  .module('munchkins')\n  .controller('Game', function($interval, Defaults, Buildings, Game, Resources, Storage) {\n    Storage.load();\n    $interval(Storage.save, Defaults.SAVE_RATE);\n\n    $interval(function() {\n\n    }, Defaults.TICK_RATE);\n  });\n","angular\n  .module('munchkins')\n  .controller('Resources', function(Resources) {\n    this.resources = Resources;\n  });\n","/*\n  Buildings are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    unlocked: <true|false>\n    increase: <base price increase>\n    value: {\n      current: <current value>\n      limit: <max value, 0 if no limit>\n      level: <upgrade level>\n    }\n    requires: {\n      resources: {\n        <resource key>: {\n          value: <number>\n        }\n      }\n    }\n    provides: {\n      resources: {\n        <resource key>: {\n          value: <number>\n          rate: <number>\n        }\n      }\n    }\n  }\n*/\nangular\n  .module('munchkins')\n  .value('Buildings', {\n    collectFlowers: {\n      name: 'Collect Flowers',\n      description: 'Flowers are the staple of the Munchkin diet, collect them',\n      unlocked: true,\n      increase: 0,\n      value: {\n        current: 0,\n        max: 0,\n        level: 0\n      },\n      requires: {\n      },\n      provides: {\n        resources: {\n          flowers: {\n            value: 1,\n            rate: 0\n          }\n        }\n      }\n    }\n  });\n","angular\n  .module('munchkins')\n  .value('Game', {\n  });\n","/*\n  Resources are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    value: {\n      current: <current value>\n      max: <max value>\n    }\n    rate: <rate of increase>\n  }\n*/\nangular\n  .module('munchkins')\n  .value('Resources', {\n    flowers: {\n      name: 'Flowers',\n      description: 'Flowers are the staple of the Munchkin diet',\n      value: {\n        current: 0,\n        limit: 0\n      },\n      rate: 0\n    }\n  });\n"],"sourceRoot":"."}