{"version":3,"sources":["app.js","controllers/buildings.js","controllers/game.js","controllers/resources.js","services/storage.js","values/buildings.js","values/game.js","values/resources.js"],"names":["angular","module","constant","TICK_RATE","SAVE_RATE","SAVE_LOCATION","config","$routeProvider","when","templateUrl","otherwise","redirectTo","controller","Buildings","Resources","this","buildings","buy","key","b","value","current","_","forEach","requires","resources","req","rkey","r","provides","prov","pkey","rate","$interval","Defaults","Game","Storage","save","service","console","log","version","res","bld","unlocked","localStorage","setItem","Const","JSON","stringify","err","error","load","parse","getItem","collectFlowers","name","description","increase","max","level","flowers","limit"],"mappings":"AAAA,YAEAA,SACGC,OAAO,aAAc,YACrBC,SAAS,YACRC,UAAW,IACXC,UAAW,IACXC,cAAe,kBAEhBC,QAAA,iBAAO,SAASC,GACfA,EACGC,KAAK,cAAgBC,YAAa,yBAClCC,WAAYC,WAAY;ACZ/B,YAAAX,SACGC,OAAO,aACPW,WAAW,aAAA,YAAA,YAAa,SAASC,EAAWC,GAC3CC,KAAKC,UAAYH,EAEjBE,KAAKE,IAAM,SAASC,GAClB,GAAMC,GAAIN,EAAUK,EACpBC,GAAEC,MAAMC,UAERC,EAAEC,QAAQJ,EAAEK,SAASC,UAAW,SAASC,EAAKC,GAC5C,GAAMC,GAAId,EAAUa,EACpBC,GAAER,MAAMC,SAAWK,EAAIN,QAGzBE,EAAEC,QAAQJ,EAAEU,SAASJ,UAAW,SAASK,EAAMC,GAC7C,GAAMH,GAAId,EAAUiB,EACpBH,GAAER,MAAMC,UACRO,EAAEI,MAAQF,EAAKE;ACjBvB,YAAAhC,SACGC,OAAO,aACPW,WAAW,QAAA,YAAA,WAAA,YAAA,OAAA,YAAA,UAAQ,SAASqB,EAAWC,EAAUrB,EAAWsB,EAAMrB,EAAWsB,GAC5EH,EAAUG,EAAQC,KAAMH,EAAS9B,WAEjC6B,EAAU,aAEPC,EAAS/B;ACPhB,YAAAH,SACGC,OAAO,aACPW,WAAW,aAAA,YAAa,SAASE,GAChCC,KAAKU,UAAYX;ACHrB,YAAAd,SACGC,OAAO,aACPqC,QAAQ,WAAA,YAAA,WAAA,YAAA,YAAW,SAASL,EAAWC,EAAUpB,EAAWD,GAC3DE,KAAKsB,KAAO,WACVE,QAAQC,IAAI,cACZ,MACA,WAAE,GAAMH,IACJI,QAAS,EACThB,aACAT,aAGFM,GAAEC,QAAQT,EAAW,SAAS4B,EAAKxB,GACjCmB,EAAKZ,UAAUP,IACbE,MAAOsB,EAAItB,SAIfE,EAAEC,QAAQV,EAAW,SAAS8B,EAAKzB,GACjCmB,EAAKrB,UAAUE,IACbE,MAAOuB,EAAIvB,MACXwB,SAAUD,EAAIC,YAIlBC,aAAaC,QAAQC,MAAM1C,cAAe2C,KAAKC,UAAUZ,OACzD,MAAMa,GACNX,QAAQY,MAAMD,KAIlBnC,KAAKqC,KAAO,WACVb,QAAQC,IAAI,eACZ,KACE,GAAMY,GAAOJ,KAAKK,MAAMR,aAAaS,QAAQP,MAAM1C,eAEnDiB,GAAEC,QAAQ6B,EAAK3B,UAAW,SAASiB,EAAKxB,GACtCJ,EAAUI,GAAKE,MAAQsB,EAAItB,QAG7BE,EAAEC,QAAQ6B,EAAKpC,UAAW,SAAS2B,EAAKzB,GACtCL,EAAUK,GAAKE,MAAQuB,EAAIvB,MAC3BP,EAAUK,GAAK0B,SAAWD,EAAIC,WAEhC,MAAOM,GACPX,QAAQY,MAAMD;ACftB,YAAAlD,SACGC,OAAO,aACPmB,MAAM,aACLmC,gBACEC,KAAM,kBACNC,YAAa,4DACbb,UAAU,EACVc,SAAU,EACVtC,OACEC,QAAS,EACTsC,IAAK,EACLC,MAAO,GAETpC,YAEAK,UACEJ,WACEoC,SACEzC,MAAO,EACPY,KAAM;ACjDlB,YAAAhC,SACGC,OAAO,aACPmB,MAAM;ACWT,YAAApB,SACGC,OAAO,aACPmB,MAAM,aACLyC,SACEL,KAAM,UACNC,YAAa,8CACbrC,OACEC,QAAS,EACTyC,MAAO,GAET9B,KAAM","file":"munchkins.js","sourcesContent":["'use strict';\n\nangular\n  .module('munchkins', ['ngRoute'])\n  .constant('Defaults', {\n    TICK_RATE: 250,\n    SAVE_RATE: 60000,\n    SAVE_LOCATION: 'munchkinsSave'\n  })\n  .config(function($routeProvider) {\n    $routeProvider\n      .when('/buildings', { templateUrl: 'views/buildings.html' })\n      .otherwise({ redirectTo: '/buildings' });\n  });\n","angular\n  .module('munchkins')\n  .controller('Buildings', function(Buildings, Resources) {\n    this.buildings = Buildings;\n\n    this.buy = function(key) {\n      const b = Buildings[key];\n      b.value.current++;\n\n      _.forEach(b.requires.resources, function(req, rkey) {\n        const r = Resources[rkey];\n        r.value.current -= req.value;\n      });\n\n      _.forEach(b.provides.resources, function(prov, pkey) {\n        const r = Resources[pkey];\n        r.value.current++;\n        r.rate += prov.rate;\n      });\n    };\n  });\n","angular\n  .module('munchkins')\n  .controller('Game', function($interval, Defaults, Buildings, Game, Resources, Storage) {\n    $interval(Storage.save, Defaults.SAVE_RATE);\n\n    $interval(function() {\n\n    }, Defaults.TICK_RATE);\n  });\n","angular\n  .module('munchkins')\n  .controller('Resources', function(Resources) {\n    this.resources = Resources;\n  });\n","angular\n  .module('munchkins')\n  .service('Storage', function($interval, Defaults, Resources, Buildings) {\n    this.save = function() {\n      console.log('Saving game');\n      try {\n        const save = {\n          version: 1,\n          resources: {},\n          buildings: {}\n        };\n\n        _.forEach(Resources, function(res, key) {\n          save.resources[key] = {\n            value: res.value\n          };\n        });\n\n        _.forEach(Buildings, function(bld, key) {\n          save.buildings[key] = {\n            value: bld.value,\n            unlocked: bld.unlocked\n          };\n        });\n\n        localStorage.setItem(Const.SAVE_LOCATION, JSON.stringify(save));\n      } catch(err) {\n        console.error(err);\n      }\n    };\n\n    this.load = function() {\n      console.log('Loading game');\n      try {\n        const load = JSON.parse(localStorage.getItem(Const.SAVE_LOCATION));\n\n        _.forEach(load.resources, function(res, key) {\n          Resources[key].value = res.value;\n        });\n\n        _.forEach(load.buildings, function(bld, key) {\n          Buildings[key].value = bld.value;\n          Buildings[key].unlocked = bld.unlocked;\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n  });\n","/*\n  Buildings are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    unlocked: <true|false>\n    increase: <base price increase>\n    value: {\n      current: <current value>\n      limit: <max value, 0 if no limit>\n      level: <upgrade level>\n    }\n    requires: {\n      resources: {\n        <resource key>: {\n          value: <number>\n        }\n      }\n    }\n    provides: {\n      resources: {\n        <resource key>: {\n          value: <number>\n          rate: <number>\n        }\n      }\n    }\n  }\n*/\nangular\n  .module('munchkins')\n  .value('Buildings', {\n    collectFlowers: {\n      name: 'Collect Flowers',\n      description: 'Flowers are the staple of the Munchkin diet, collect them',\n      unlocked: true,\n      increase: 0,\n      value: {\n        current: 0,\n        max: 0,\n        level: 0\n      },\n      requires: {\n      },\n      provides: {\n        resources: {\n          flowers: {\n            value: 1,\n            rate: 0\n          }\n        }\n      }\n    }\n  });\n","angular\n  .module('munchkins')\n  .value('Game', {\n  });\n","/*\n  Resources are defined with the following structure\n\n  <key>: {\n    name: <string name>\n    description: <string description>\n    value: {\n      current: <current value>\n      max: <max value>\n    }\n    rate: <rate of increase>\n  }\n*/\nangular\n  .module('munchkins')\n  .value('Resources', {\n    flowers: {\n      name: 'Flowers',\n      description: 'Flowers are the staple of the Munchkin diet',\n      value: {\n        current: 0,\n        limit: 0\n      },\n      rate: 0\n    }\n  });\n"],"sourceRoot":"."}